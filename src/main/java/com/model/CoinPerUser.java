package com.model;

import java.math.BigDecimal;
import java.util.Date;

import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.PastOrPresent;

import org.springframework.format.annotation.DateTimeFormat;

public class CoinPerUser {

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database column coin_per_user.id
	 * @mbg.generated  Tue Jan 09 18:29:23 CET 2018
	 */
	private Integer id;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database column coin_per_user.id_user
	 * @mbg.generated  Tue Jan 09 18:29:23 CET 2018
	 */
	private UserInfo userInfo;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database column coin_per_user.id_quotation
	 * @mbg.generated  Tue Jan 09 18:29:23 CET 2018
	 */
	private CoinByExchange coinByExchange;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database column coin_per_user.quantity
	 * @mbg.generated  Tue Jan 09 18:29:23 CET 2018
	 */
	@NotNull(message = "Please enter between {min} and {max} characters.") 
	@Min(0)
	private BigDecimal quantity;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database column coin_per_user.invested
	 * @mbg.generated  Tue Jan 09 18:29:23 CET 2018
	 */
	@NotNull @Min(0)
	private BigDecimal invested;
	
	@NotNull @Min(0)
	private BigDecimal satoshiBuy;
	
	@NotNull @DateTimeFormat(pattern = "dd/MM/yyyy") @PastOrPresent
	private Date buyDate;

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of the database column coin_per_user.id
	 * @return  the value of coin_per_user.id
	 * @mbg.generated  Tue Jan 09 18:29:23 CET 2018
	 */
	public Integer getId() {
		return id;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the database column coin_per_user.id
	 * @param id  the value for coin_per_user.id
	 * @mbg.generated  Tue Jan 09 18:29:23 CET 2018
	 */
	public void setId(Integer id) {
		this.id = id;
	}


	public UserInfo getUserInfo() {
		return userInfo;
	}

	public void setUserInfo(UserInfo userInfo) {
		this.userInfo = userInfo;
	}

	public CoinByExchange getCoinByExchange() {
		return coinByExchange;
	}

	public void setCoinByExchange(CoinByExchange coinByExchange) {
		this.coinByExchange = coinByExchange;
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of the database column coin_per_user.quantity
	 * @return  the value of coin_per_user.quantity
	 * @mbg.generated  Tue Jan 09 18:29:23 CET 2018
	 */
	public BigDecimal getQuantity() {
		return quantity;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the database column coin_per_user.quantity
	 * @param quantity  the value for coin_per_user.quantity
	 * @mbg.generated  Tue Jan 09 18:29:23 CET 2018
	 */
	public void setQuantity(BigDecimal quantity) {
		this.quantity = quantity;
	}

	/**
	 * This method was generated by MyBatis Generator. This method returns the value of the database column coin_per_user.invested
	 * @return  the value of coin_per_user.invested
	 * @mbg.generated  Tue Jan 09 18:29:23 CET 2018
	 */
	public BigDecimal getInvested() {
		return invested;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the value of the database column coin_per_user.invested
	 * @param invested  the value for coin_per_user.invested
	 * @mbg.generated  Tue Jan 09 18:29:23 CET 2018
	 */
	public void setInvested(BigDecimal invested) {
		this.invested = invested;
	}

	public BigDecimal getSatoshiBuy() {
		return satoshiBuy;
	}

	public void setSatoshiBuy(BigDecimal satoshiBuy) {
		this.satoshiBuy = satoshiBuy;
	}

	public Date getBuyDate() {
		return buyDate;
	}

	public void setBuyDate(Date buyDate) {
		this.buyDate = buyDate;
	}
	
	
	
	
}