<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.client.CoinPerUserMapper">
	<resultMap id="BaseResultMap" type="com.model.CoinPerUser">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="quantity" jdbcType="NUMERIC" property="quantity" />
		<result column="invested" jdbcType="NUMERIC" property="invested" />
		<result column="satoshi_buy" jdbcType="NUMERIC" property="satoshiBuy" />
		<result column="buy_date" jdbcType="TIMESTAMP" property="buyDate" />
		<association property="coinByExchange" column="id_coin_by_exchange" resultMap="com.client.CoinByExchangeMapper.BaseResultMap" />
		<association property="userInfo" column="id_user" resultMap="com.client.UserInfoMapper.BaseResultMap" />
		<association property="coinByExchange.coinPair" column="id_coin_pair" javaType="com.model.Coin" >
			<result column="id_coin_pair" jdbcType="INTEGER" property="id" />
			<result column="name_coin_pair" jdbcType="VARCHAR" property="name" />
			<result column="short_name_coin_pair" jdbcType="VARCHAR" property="shortName" />
		    <result column="finalPair" jdbcType="VARCHAR" property="isFinal" />
		</association>
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Jan 08 
			18:56:27 CET 2018. -->
		coin_per_user.id,
		coin_by_exchange.id, 
		exchange.id as id_exchange,
		exchange.name as nameExchange,
		coin.id as id_coin,
		coin.name,
		coin.short_name,
		coinPair.id as id_coin_pair,
		coinPair.name as name_coin_pair,
		coinPair.short_name as short_name_coin_pair,
		coinPair.final as finalPair,
		quantity,
		invested,
		satoshi_buy,
		buy_date
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Jan 08 
			18:56:27 CET 2018. -->
		select 'false' as QUERYID,
		<include refid="Base_Column_List" />
		from coin_per_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Jan 08 
			18:56:27 CET 2018. -->
		delete from coin_per_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.model.CoinPerUser">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Jan 08 
			18:56:27 CET 2018. -->
		insert into coin_per_user (id, id_user, id_coin_by_exchange,
		quantity, invested)
		values (#{id,jdbcType=INTEGER}, #{idUser,jdbcType=INTEGER},
		#{idQuotation,jdbcType=INTEGER},
		#{quantity,jdbcType=NUMERIC}, #{invested,jdbcType=NUMERIC}, #{satoshiBuy,jdbcType=NUMERIC})
	</insert>
	<insert id="insertSelective" parameterType="com.model.CoinPerUser">
		insert into coin_per_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userInfo.id != null">
				id_user,
			</if>
			<if test="coinByExchange.id != null">
				id_coin_by_exchange,
			</if>
			<if test="quantity != null">
				quantity,
			</if>
			<if test="invested != null">
				invested,
			</if>
			<if test="satoshiBuy != null">
				satoshi_buy,
			</if>
			<if test="buyDate != null">
				buy_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userInfo.id != null">
				#{userInfo.id,jdbcType=INTEGER},
			</if>
			<if test="coinByExchange.id != null">
				#{coinByExchange.id,jdbcType=INTEGER},
			</if>
			<if test="quantity != null">
				#{quantity,jdbcType=NUMERIC},
			</if>
			<if test="invested != null">
				#{invested,jdbcType=NUMERIC},
			</if>
			<if test="satoshiBuy != null">
				#{satoshiBuy,jdbcType=NUMERIC},
			</if>
			<if test="buyDate != null">
				#{buyDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.model.CoinPerUser">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Jan 08 
			18:56:27 CET 2018. -->
		update coin_per_user
		<set>
			<if test="idUser != null">
				id_user = #{idUser,jdbcType=INTEGER},
			</if>
			<if test="idQuotation != null">
				id_coin_by_exchange = #{idQuotation,jdbcType=INTEGER},
			</if>
			<if test="quantity != null">
				quantity = #{quantity,jdbcType=NUMERIC},
			</if>
			<if test="invested != null">
				invested = #{invested,jdbcType=NUMERIC},
			</if>
			<if test="satoshi_buy != null">
				satoshi_buy = #{satoshiBuy,jdbcType=NUMERIC},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.model.CoinPerUser">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Jan 08 
			18:56:27 CET 2018. -->
		update coin_per_user
		set id_user = #{idUser,jdbcType=INTEGER},
		id_coin_by_exchange = #{idQuotation,jdbcType=INTEGER},
		quantity = #{quantity,jdbcType=NUMERIC},
		invested = #{invested,jdbcType=NUMERIC},
		satoshi_buy = #{satoshiBuy,jdbcType=NUMERIC}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByUserID" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select 'false' as QUERYID,
		<include refid="Base_Column_List" />
		from coin_per_user
		INNER JOIN coin_by_exchange ON coin_per_user.id_coin_by_exchange = coin_by_exchange.id
		INNER JOIN user_info ON coin_per_user.id_user = user_info.id
		where coin_per_user.id = #{userID,jdbcType=INTEGER}
	</select>
	<select id="selectByUserLogin" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select 'false' as QUERYID,
		<include refid="Base_Column_List" />
		from coin_per_user
		INNER JOIN coin_by_exchange ON coin_per_user.id_coin_by_exchange = coin_by_exchange.id
		INNER JOIN exchange ON coin_by_exchange.id_exchange = exchange.id
		INNER JOIN coin ON coin_by_exchange.id_coin = coin.id
		INNER JOIN coin as coinPair ON coin_by_exchange.id_coin_pair = coinPair.id
		INNER JOIN user_info ON coin_per_user.id_user = user_info.id
		where user_info.login = #{userLogin,jdbcType=VARCHAR}
	</select>
	<select id="selectByUserCryptoExcange"
		resultMap="BaseResultMap">
		select 'false' as QUERYID,
		<include refid="Base_Column_List" />
		from coin_per_user
		INNER JOIN coin_by_exchange ON coin_per_user.id_coin_by_exchange = coin_by_exchange.id
		INNER JOIN exchange ON coin_by_exchange.id_exchange = exchange.id
		INNER JOIN coin ON coin_by_exchange.id_coin = coin.id
		INNER JOIN user_info ON coin_per_user.id_user = user_info.id
		INNER JOIN coin as coinPair ON coin_by_exchange.id_coin_pair = coinPair.id
		where user_info.login = #{userLogin,jdbcType=VARCHAR}
		and exchange.id = #{idExchange,jdbcType=INTEGER}
		and coin.id = #{idCrypto,jdbcType=INTEGER}
	</select>
</mapper>

